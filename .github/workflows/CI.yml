name: CMake Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release, Debug]
        exclude:
          - os: windows-latest
            build_type: Debug  
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends \
          cmake \
          g++ \
          make \
          libfmt-dev  

    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v1
      with:
        vs-version: '17.0'
        components: 'Microsoft.VisualStudio.Component.VC.CMake.Project'

    - name: Configure Project
      shell: bash
      run: |
        mkdir -p build
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64
        else
          cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        fi

    - name: Build Project
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cmake --build build --config ${{ matrix.build_type }} --parallel
        else
          cmake --build build -- -j$(nproc)
        fi

    - name: Run tests
      if: matrix.os == 'ubuntu-latest'  
      run: |
        cd build
        ctest --output-on-failure

    - name: Upload artifacts (Debug)
      if: matrix.build_type == 'Debug' && github.event_name == 'push'
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ matrix.os }}-${{ matrix.build_type }}
        path: build/
